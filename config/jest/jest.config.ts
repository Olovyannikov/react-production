export default {
    clearMocks: true,
    testEnvironment: 'jsdom',
    rootDir: '../../',
    moduleDirectories: ['node_modules'],
    testMatch: [`<rootDir>src/**/*(*.)@(spec|test).[tj]s?(x)`],
    moduleFileExtensions: ['js', 'jsx', 'ts', 'tsx', 'json', 'node'],
    // automock: false,
    // bail: 0,
    // cacheDirectory: "/private/var/folders/22/9dl4d6kx0xlcc927qrxl968h895pcj/T/jest_4ljs0h",
    // collectCoverage: false,
    // collectCoverageFrom: undefined,
    // coverageDirectory: undefined,
    // coveragePathIgnorePatterns: [
    //   "/node_modules/"
    // ],
    // coverageProvider: "babel",
    // coverageReporters: [
    //   "json",
    //   "text",
    //   "lcov",
    //   "clover"
    // ],
    // coverageThreshold: undefined,
    // dependencyExtractor: undefined,
    // errorOnDeprecated: false,
    // forceCoverageMatch: [],
    // globalSetup: undefined,
    // globalTeardown: undefined,
    // globals: {},
    // maxWorkers: "50%",
    // moduleNameMapper: {},
    // modulePathIgnorePatterns: [],
    // notify: false,
    // notifyMode: "failure-change",
    // preset: undefined,
    // projects: undefined,
    // reporters: undefined,
    // resetMocks: false,
    // resetModules: false,
    // resolver: undefined,
    // restoreMocks: false,
    // roots: [
    //   "<rootDir>"
    // ],
    // runner: "jest-runner",
    // setupFiles: [],
    // setupFilesAfterEnv: [],
    // slowTestThreshold: 5,
    // snapshotSerializers: [],
    // testEnvironmentOptions: {},
    // testLocationInResults: false,
    // testPathIgnorePatterns: [
    //   "/node_modules/"
    // ],
    // testRegex: [],
    // testResultsProcessor: undefined,
    // testRunner: "jest-circus/runner",
    // testURL: "http://localhost",
    // timers: "real",
    // transform: undefined,
    // transformIgnorePatterns: [
    //   "/node_modules/",
    //   "\\.pnp\\.[^\\/]+$"
    // ],
    // unmockedModulePathPatterns: undefined,
    // verbose: undefined,
    // watchPathIgnorePatterns: [],
    // watchman: true,
};
